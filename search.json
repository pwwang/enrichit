[{"path":"https://pwwang.github.io/enrichit/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 enrichit authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://pwwang.github.io/enrichit/articles/over-representation_enrichment_analysis.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Over-representation Enrichment Analysis","text":"vignette demonstrates perform -representation enrichment analysis using enrichit package. package provides convenient way analyze gene sets custom gene sets (GMT files) supports clusterProfiler enrichr styles analysis. package designed work offline, making suitable environments limited internet access. Additionally, seamlessly integrates scplotter package visualization.","code":""},{"path":"https://pwwang.github.io/enrichit/articles/over-representation_enrichment_analysis.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Over-representation Enrichment Analysis","text":"can install development version enrichit GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"pwwang/enrichit\") # remotes::install_github(\"pwwang/enrichit\")"},{"path":[]},{"path":"https://pwwang.github.io/enrichit/articles/over-representation_enrichment_analysis.html","id":"load-example-data","dir":"Articles","previous_headings":"Data preparation","what":"Load example data","title":"Over-representation Enrichment Analysis","text":"example data used vignette included package. can load using following command: example, use userlist data, contains list genes interest. data character vector gene symbols. can replace gene list. don’t gene symbols, match gene names GMT files using analysis.","code":"data(userlist)"},{"path":"https://pwwang.github.io/enrichit/articles/over-representation_enrichment_analysis.html","id":"load-gmt-files","dir":"Articles","previous_headings":"Data preparation","what":"Load GMT files","title":"Over-representation Enrichment Analysis","text":"enrichit package comes built-GMT files BioCarta, GO, KEGG, MSigDB Hallmark, Reactome pathways WikiPathways. can find files extdata directory package. can find public GMT files MSigDB database enrichr database. can also use custom GMT files. load GMT files, can use following commands: Specifying URL GMT file also supported. example, can use following command load GMT file URL: Additionally, can also use name library enrichr database load GMT file. one built-libraries (BioCarta, BioCarta_2016, GO_Biological_Process, GO_Biological_Process_2025, GO_Cellular_Component, GO_Cellular_Component_2025, GO_Molecular_Function, GO_Molecular_Function_2025, KEGG, KEGG_2021, KEGG_Human, KEGG_2021_Human, Hallmark, MSigDB_Hallmark, MSigDB_Hallmark_2020, Reactome, Reactome_Pathways, Reactome_Pathways_2024, WikiPathways, WikiPathways_2024), GMT file loaded package. Otherwise, downloaded enrichr database library.","code":"kegg_gmt <- system.file(\"extdata\", \"KEGG_2021_Human.gmt.gz\", package = \"enrichit\") hallmark_gmt <- system.file(\"extdata\", \"MSigDB_Hallmark_2020.gmt.gz\", package = \"enrichit\")  pathways <- ParseGMT(kegg_gmt) pathways[1:2] #> $`ABC transporters` #>  [1] \"ABCA2\"  \"ABCC4\"  \"ABCG8\"  \"ABCA3\"  \"ABCC5\"  \"ABCC2\"  \"ABCA1\"  \"ABCC3\"  #>  [9] \"ABCA6\"  \"ABCC8\"  \"ABCA7\"  \"ABCC9\"  \"ABCA4\"  \"ABCC6\"  \"ABCA5\"  \"TAP2\"   #> [17] \"ABCA8\"  \"TAP1\"   \"ABCA9\"  \"ABCA10\" \"ABCB10\" \"ABCA12\" \"ABCB11\" \"ABCC10\" #> [25] \"ABCG1\"  \"ABCG4\"  \"ABCC1\"  \"ABCG5\"  \"ABCG2\"  \"CFTR\"   \"ABCB4\"  \"ABCB1\"  #> [33] \"ABCD3\"  \"ABCD4\"  \"ABCB7\"  \"ABCB8\"  \"ABCB5\"  \"ABCB6\"  \"ABCB9\"  \"ABCA13\" #> [41] \"ABCC11\" \"ABCC12\" \"DEFB1\"  \"ABCD1\"  \"ABCD2\"  #>  #> $`AGE-RAGE signaling pathway in diabetic complications`gmt_url <- \"https://example.com/path/to/your/gmt/file.gmt\" # pathways <- ParseGMT(gmt_url) # Load built-in libraries library_name <- \"MSigDB_Hallmark\" hallmarks <- ParseGMT(library_name) hallmarks[1:2] #> $`TNF-alpha Signaling via NF-kB` #>   [1] \"MARCKS\"   \"IL23A\"    \"NINJ1\"    \"TNFSF9\"   \"SIK1\"     \"ATF3\"     #>   [7] \"SERPINE1\" \"MYC\"      \"HES1\"     \"CCN1\"     \"CCNL1\"    \"EGR1\"     #>  [13] \"EGR2\"     \"EGR3\"     \"JAG1\"     \"ABCA1\"    \"GADD45B\"  \"GADD45A\"  #>  [19] \"KLF10\"    \"PLK2\"     \"EIF1\"     \"EHD1\"     \"FOSL2\"    \"FOSL1\"    #>  [25] \"GPR183\"   \"PLPP3\"    \"IFIT2\"    \"ICAM1\"    \"ZC3H12A\"  \"IER2\"     #>  [31] \"IL12B\"    \"IER5\"     \"JUNB\"     \"IER3\"     \"STAT5A\"   \"DUSP5\"    #>  [37] \"EDN1\"     \"DUSP4\"    \"JUN\"      \"DUSP1\"    \"DUSP2\"    \"TSC22D1\"  #>  [43] \"CCL20\"    \"SPHK1\"    \"LIF\"      \"IL18\"     \"TUBB2A\"   \"RHOB\"     #>  [49] \"VEGFA\"    \"IL1A\"     \"PTPRE\"    \"TLR2\"     \"IL1B\"     \"BHLHE40\"  #>  [55] \"CLCF1\"    \"ID2\"      \"REL\"      \"FJX1\"     \"SGK1\"     \"BTG3\"     #>  [61] \"BTG2\"     \"BTG1\"     \"SDC4\"     \"LITAF\"    \"AREG\"     \"SOCS3\"    #>  [67] \"PANX1\"    \"RIPK2\"    \"NFIL3\"    \"SERPINB2\" \"GCH1\"     \"IFNGR2\"   #>  [73] \"G0S2\"     \"FOS\"      \"F3\"       \"SERPINB8\" \"SPSB1\"    \"FOSB\"     #>  [79] \"PER1\"     \"F2RL1\"    \"HBEGF\"    \"CD44\"     \"TRIP10\"   \"CDKN1A\"   #>  [85] \"PTGER4\"   \"PTGS2\"    \"IFIH1\"    \"NAMPT\"    \"OLR1\"     \"ICOSLG\"   #>  [91] \"PHLDA1\"   \"ZBTB10\"   \"TAP1\"     \"PNRC1\"    \"CXCL10\"   \"CXCL11\"   #>  [97] \"IL6ST\"    \"CD69\"     \"SQSTM1\"   \"RELA\"     \"CD83\"     \"CSF2\"     #> [103] \"CSF1\"     \"CD80\"     \"PPP1R15A\" \"TNC\"      \"TNF\"      \"RELB\"     #> [109] \"TANK\"     \"ZFP36\"    \"CCND1\"    \"RNF19B\"   \"CCRL2\"    \"DENND5A\"  #> [115] \"MAP3K8\"   \"PHLDA2\"   \"LDLR\"     \"SLC16A6\"  \"SMAD3\"    \"TGIF1\"    #> [121] \"MAP2K3\"   \"DDX58\"    \"INHBA\"    \"TRAF1\"    \"NFKB1\"    \"NFKB2\"    #> [127] \"GEM\"      \"MAFF\"     \"NR4A3\"    \"RCAN1\"    \"EFNA1\"    \"NR4A2\"    #> [133] \"MXD1\"     \"BIRC2\"    \"BIRC3\"    \"YRDC\"     \"IL7R\"     \"PFKFB3\"   #> [139] \"IRS2\"     \"SLC2A3\"   \"PLAU\"     \"SAT1\"     \"SLC2A6\"   \"ETS2\"     #> [145] \"NR4A1\"    \"SNN\"      \"PMEPA1\"   \"TNFRSF9\"  \"MSC\"      \"TIPARP\"   #> [151] \"LAMB3\"    \"GFPT2\"    \"CFLAR\"    \"TNIP1\"    \"IRF1\"     \"NFKBIA\"   #> [157] \"BMP2\"     \"IL6\"      \"TNIP2\"    \"BCL6\"     \"BCL3\"     \"NFKBIE\"   #> [163] \"NFE2L2\"   \"B4GALT1\"  \"NFAT5\"    \"BCL2A1\"   \"TNFAIP8\"  \"TNFAIP6\"  #> [169] \"TNFAIP3\"  \"CXCL2\"    \"CXCL1\"    \"TNFAIP2\"  \"CXCL3\"    \"CXCL6\"    #> [175] \"FUT4\"     \"DRAM1\"    \"DNAJB4\"   \"PDE4B\"    \"PDLIM5\"   \"MCL1\"     #> [181] \"KDM6B\"    \"IL15RA\"   \"PLAUR\"    \"ATP2B1\"   \"KLF4\"     \"KLF2\"     #> [187] \"SOD2\"     \"KLF9\"     \"KLF6\"     \"ACKR3\"    \"PTX3\"     \"B4GALT5\"  #> [193] \"TRIB1\"    \"CEBPB\"    \"CEBPD\"    \"PLEK\"     \"CCL5\"     \"KYNU\"     #> [199] \"CCL4\"     \"CCL2\"     #>  #> $Hypoxia #>   [1] \"WSB1\"     \"JMJD6\"    \"XPNPEP1\"  \"RRAGD\"    \"PPP1R3C\"  \"MT1E\"     #>   [7] \"TES\"      \"ATF3\"     \"SERPINE1\" \"GLRX\"     \"UGP2\"     \"NOCT\"     #>  [13] \"MXI1\"     \"DPYSL4\"   \"CCN5\"     \"CCN2\"     \"PPARGC1A\" \"CCN1\"     #>  [19] \"DTNA\"     \"SIAH2\"    \"MIF\"      \"PRKCA\"    \"EXT1\"     \"FOSL2\"    #>  [25] \"SLC6A6\"   \"SULT2B1\"  \"BCAN\"     \"LALBA\"    \"CHST2\"    \"SDC2\"     #>  [31] \"HOXB9\"    \"CHST3\"    \"LXN\"      \"NEDD4L\"   \"PDGFB\"    \"ENO1\"     #>  [37] \"ENO2\"     \"ENO3\"     \"RBPJ\"     \"MT2A\"     \"PLAC8\"    \"PRDX5\"    #>  [43] \"HMOX1\"    \"PDK1\"     \"IER3\"     \"PDK3\"     \"EDN2\"     \"ANXA2\"    #>  [49] \"JUN\"      \"DUSP1\"    \"TPI1\"     \"AMPD3\"    \"CP\"       \"VEGFA\"    #>  [55] \"P4HA1\"    \"P4HA2\"    \"BHLHE40\"  \"CCNG2\"    \"PAM\"      \"ALDOC\"    #>  [61] \"ALDOB\"    \"ALDOA\"    \"GPI\"      \"BTG1\"     \"CITED2\"   \"SDC3\"     #>  [67] \"SDC4\"     \"STC1\"     \"ADM\"      \"STC2\"     \"VLDLR\"    \"BRS3\"     #>  [73] \"LDHC\"     \"LDHA\"     \"CSRP2\"    \"IDS\"      \"NFIL3\"    \"PCK1\"     #>  [79] \"TPD52\"    \"PKLR\"     \"PGAM2\"    \"GAA\"      \"FOS\"      \"BGN\"      #>  [85] \"F3\"       \"TPST2\"    \"ANGPTL4\"  \"PLIN2\"    \"INHA\"     \"ERRFI1\"   #>  [91] \"SRPX\"     \"CDKN1B\"   \"CDKN1C\"   \"ERO1A\"    \"HEXA\"     \"CDKN1A\"   #>  [97] \"NCAN\"     \"GBE1\"     \"GCNT2\"    \"PYGM\"     \"GYS1\"     \"NDST2\"    #> [103] \"NDST1\"    \"AKAP12\"   \"STBD1\"    \"CXCR4\"    \"CA12\"     \"HS3ST1\"   #> [109] \"MAP3K1\"   \"TGFB3\"    \"CAVIN1\"   \"CAVIN3\"   \"KLHL24\"   \"PNRC1\"    #> [115] \"SAP30\"    \"GCK\"      \"ILVBL\"    \"COL5A1\"   \"TGFBI\"    \"GAPDHS\"   #> [121] \"S100A4\"   \"PKP1\"     \"PPP1R15A\" \"HDLBP\"    \"EGFR\"     \"FOXO3\"    #> [127] \"NDRG1\"    \"KIF5A\"    \"ZFP36\"    \"GPC1\"     \"HAS1\"     \"GPC4\"     #> [133] \"GPC3\"     \"PPFIA4\"   \"IGFBP1\"   \"BNIP3L\"   \"IGFBP3\"   \"B3GALT6\"  #> [139] \"PGF\"      \"MAFF\"     \"EFNA1\"    \"ISG20\"    \"EFNA3\"    \"LOX\"      #> [145] \"PFKFB3\"   \"IRS2\"     \"SLC2A1\"   \"AK4\"      \"SLC2A3\"   \"SLC2A5\"   #> [151] \"ETS1\"     \"RORA\"     \"TGM2\"     \"FAM162A\"  \"PIM1\"     \"ANKZF1\"   #> [157] \"TIPARP\"   \"HSPA5\"    \"CAV1\"     \"GALK1\"    \"GRHPR\"    \"IL6\"      #> [163] \"ADORA2B\"  \"MYH9\"     \"BCL2\"     \"FBP1\"     \"TMEM45A\"  \"SLC25A1\"  #> [169] \"TNFAIP3\"  \"HK1\"      \"HK2\"      \"CASP6\"    \"PGK1\"     \"B4GALNT2\" #> [175] \"SLC37A4\"  \"TKTL1\"    \"TPBG\"     \"PLAUR\"    \"DCN\"      \"SELENBP1\" #> [181] \"KLF7\"     \"NAGK\"     \"KLF6\"     \"PFKL\"     \"DDIT4\"    \"DDIT3\"    #> [187] \"ACKR3\"    \"KDELR3\"   \"GAPDH\"    \"PFKP\"     \"KDM3A\"    \"ZNF292\"   #> [193] \"NR3C1\"    \"PHKG1\"    \"VHL\"      \"ATP7A\"    \"PGM2\"     \"SCARB1\"   #> [199] \"LARGE1\"   \"PGM1\" # Load from enrichr library using name library_name <- \"ChEA_2022\" chea <- ParseGMT(library_name) #> Using cached file: /home/runner/.cache/R/enrichit/3d40e13b/ChEA_2022.gmt chea[1:2] #> $`BP1 19119308 ChIP-ChIP Hs578T Human` #>  [1] \"CBR1\"    \"OR1A1\"   \"HTR1B\"   \"LAPTM5\"  \"ADAM21\"  \"HPSE2\"   \"SELE\"    #>  [8] \"CSF2RB\"  \"VEGFA\"   \"PTPRE\"   \"LSM7\"    \"IL2RA\"   \"MMP27\"   \"LGALS13\" #> [15] \"CCL4\"    \"ITGA9\"   \"CASQ1\"   \"TAC3\"    #>  #> $`FOXP1 22492998 ChIP-Seq STRATIUM Mouse` #>  [1] \"MCTS2\"   \"PCSK2\"   \"BCL11B\"  \"ALMS1\"   \"ETFDH\"   \"PTEN\"    \"RLF\"     #>  [8] \"ACYP2\"   \"RXFP1\"   \"FOXP1\"   \"RPL36AL\" \"TMEM125\" \"TMX4\"    \"MGAT2\"   #> [15] \"IGFBP7\"  \"LDLR\""},{"path":[]},{"path":"https://pwwang.github.io/enrichit/articles/over-representation_enrichment_analysis.html","id":"single-gene-set-database","dir":"Articles","previous_headings":"Enrichment analysis","what":"Single gene set database","title":"Over-representation Enrichment Analysis","text":"can also specify GMT file path directly: may notice values Database column different. keep column support enrichment analysis multiple databases. database specified (first EnrichIt example), argument name (pathways) used database name. GMT file specified (second EnrichIt example), GMT file name used database name. can also explictly specify database name:","code":"# pathways was loaded previously # pathways = ParseGMT(kegg_gmt)  head(EnrichIt(userlist, pathways), n = 3) #> Warning in CheckUserList(userlist, db, use_matched_only = use_matched_only): #> User list contains 335 unmatched genes. Showing first 10: A1CF, A4GNT, AADAC, #> ADAMTS8, ADGRV1, AGR3, AJAP1, AKAIN1, ALKAL2, AMBP #>                                     Term Overlap      P.value Adjusted.P.value #> 202                 Pancreatic secretion  29/102 1.462598e-13     3.510235e-11 #> 161 Maturity onset diabetes of the young   14/26 1.403986e-11     1.684783e-09 #> 230     Protein digestion and absorption  20/103 9.254422e-07     7.403538e-05 #>     Odds.Ratio Combined.Score #> 202   6.950357      205.40663 #> 161  20.020000      500.28219 #> 230   4.147905       57.62682 #>                                                                                                                                                                                           Genes #> 202 AMY1B;PRSS2;PRSS1;ATP1A2;PRSS3;CELA2A;CELA2B;CPA2;CPA1;CEL;CFTR;PNLIP;CELA3A;CELA3B;AMY2A;AMY2B;CPB1;PLA2G2D;PLA2G2A;CTRL;FXYD2;PNLIPRP2;PNLIPRP1;CTRB2;PLA2G10;CTRB1;PLA2G1B;ATP2A3;SLC4A4 #> 161                                                                                                      PDX1;BHLHA15;HNF1B;MAFA;NR5A2;IAPP;RFX6;FOXA2;ONECUT1;SLC2A2;INS;NKX2-2;NKX6-1;NEUROD1 #> 230                                                                 PRSS2;PRSS1;ATP1A2;PRSS3;CELA2A;CELA2B;CPA2;CPA1;SLC6A19;PGA4;MEP1A;CELA3A;CELA3B;CPB1;CTRL;FXYD2;SLC3A1;CTRB2;CTRB1;SLC8A2 #>     Rank Database #> 202    1 pathways #> 161    2 pathways #> 230    3 pathways # kegg_gmt <- system.file(\"extdata\", \"KEGG_2021_Human.gmt.gz\", package = \"enrichit\") head(EnrichIt(userlist, kegg_gmt), n = 3) #> Warning in CheckUserList(userlist, db, use_matched_only = use_matched_only): #> User list contains 335 unmatched genes. Showing first 10: A1CF, A4GNT, AADAC, #> ADAMTS8, ADGRV1, AGR3, AJAP1, AKAIN1, ALKAL2, AMBP #>                                     Term Overlap      P.value Adjusted.P.value #> 202                 Pancreatic secretion  29/102 1.462598e-13     3.510235e-11 #> 161 Maturity onset diabetes of the young   14/26 1.403986e-11     1.684783e-09 #> 230     Protein digestion and absorption  20/103 9.254422e-07     7.403538e-05 #>     Odds.Ratio Combined.Score #> 202   6.950357      205.40663 #> 161  20.020000      500.28219 #> 230   4.147905       57.62682 #>                                                                                                                                                                                           Genes #> 202 AMY1B;PRSS2;PRSS1;ATP1A2;PRSS3;CELA2A;CELA2B;CPA2;CPA1;CEL;CFTR;PNLIP;CELA3A;CELA3B;AMY2A;AMY2B;CPB1;PLA2G2D;PLA2G2A;CTRL;FXYD2;PNLIPRP2;PNLIPRP1;CTRB2;PLA2G10;CTRB1;PLA2G1B;ATP2A3;SLC4A4 #> 161                                                                                                      PDX1;BHLHA15;HNF1B;MAFA;NR5A2;IAPP;RFX6;FOXA2;ONECUT1;SLC2A2;INS;NKX2-2;NKX6-1;NEUROD1 #> 230                                                                 PRSS2;PRSS1;ATP1A2;PRSS3;CELA2A;CELA2B;CPA2;CPA1;SLC6A19;PGA4;MEP1A;CELA3A;CELA3B;CPB1;CTRL;FXYD2;SLC3A1;CTRB2;CTRB1;SLC8A2 #>     Rank        Database #> 202    1 KEGG_2021_Human #> 161    2 KEGG_2021_Human #> 230    3 KEGG_2021_Human head(EnrichIt(userlist, list(KEGG = pathways)), n = 3) #> Warning in CheckUserList(userlist, db, use_matched_only = use_matched_only): #> User list contains 335 unmatched genes. Showing first 10: A1CF, A4GNT, AADAC, #> ADAMTS8, ADGRV1, AGR3, AJAP1, AKAIN1, ALKAL2, AMBP #>                                     Term Overlap      P.value Adjusted.P.value #> 202                 Pancreatic secretion  29/102 1.462598e-13     3.510235e-11 #> 161 Maturity onset diabetes of the young   14/26 1.403986e-11     1.684783e-09 #> 230     Protein digestion and absorption  20/103 9.254422e-07     7.403538e-05 #>     Odds.Ratio Combined.Score #> 202   6.950357      205.40663 #> 161  20.020000      500.28219 #> 230   4.147905       57.62682 #>                                                                                                                                                                                           Genes #> 202 AMY1B;PRSS2;PRSS1;ATP1A2;PRSS3;CELA2A;CELA2B;CPA2;CPA1;CEL;CFTR;PNLIP;CELA3A;CELA3B;AMY2A;AMY2B;CPB1;PLA2G2D;PLA2G2A;CTRL;FXYD2;PNLIPRP2;PNLIPRP1;CTRB2;PLA2G10;CTRB1;PLA2G1B;ATP2A3;SLC4A4 #> 161                                                                                                      PDX1;BHLHA15;HNF1B;MAFA;NR5A2;IAPP;RFX6;FOXA2;ONECUT1;SLC2A2;INS;NKX2-2;NKX6-1;NEUROD1 #> 230                                                                 PRSS2;PRSS1;ATP1A2;PRSS3;CELA2A;CELA2B;CPA2;CPA1;SLC6A19;PGA4;MEP1A;CELA3A;CELA3B;CPB1;CTRL;FXYD2;SLC3A1;CTRB2;CTRB1;SLC8A2 #>     Rank Database #> 202    1     KEGG #> 161    2     KEGG #> 230    3     KEGG"},{"path":"https://pwwang.github.io/enrichit/articles/over-representation_enrichment_analysis.html","id":"multiple-gene-set-databases","dir":"Articles","previous_headings":"Enrichment analysis","what":"Multiple gene set databases","title":"Over-representation Enrichment Analysis","text":"can also perform enrichment analysis multiple gene set databases . specify multiple databases, can pass vector GMT file paths named vector GMT files EnrichIt function. names vector used database names output. pre-parsed GMT ParseGMT function, can pass named list parsed GMT files EnrichIt function. names list used database names output.","code":"# kegg_gmt <- system.file(\"extdata\", \"KEGG_2021_Human.gmt.gz\", package = \"enrichit\") # hallmark_gmt <- system.file(\"extdata\", \"MSigDB_Hallmark_2020.gmt.gz\", package = \"enrichit\")  res <- EnrichIt(userlist, c(kegg_gmt, hallmark_gmt)) #> Warning in CheckUserList(userlist, db, use_matched_only = use_matched_only): #> User list contains 335 unmatched genes. Showing first 10: A1CF, A4GNT, AADAC, #> ADAMTS8, ADGRV1, AGR3, AJAP1, AKAIN1, ALKAL2, AMBP #> Warning in CheckUserList(userlist, db, use_matched_only = use_matched_only): #> User list contains 494 unmatched genes. Showing first 10: A1CF, A4GNT, AADAC, #> ACMSD, ACSM2B, ACSM6, ACTL6B, ADAMTS8, ADGRV1, ADH1A head(res[res$Database == \"KEGG_2021_Human\", ], n = 3) #>                                     Term Overlap      P.value Adjusted.P.value #> 202                 Pancreatic secretion  29/102 1.462598e-13     3.510235e-11 #> 161 Maturity onset diabetes of the young   14/26 1.403986e-11     1.684783e-09 #> 230     Protein digestion and absorption  20/103 9.254422e-07     7.403538e-05 #>     Odds.Ratio Combined.Score #> 202   6.950357      205.40663 #> 161  20.020000      500.28219 #> 230   4.147905       57.62682 #>                                                                                                                                                                                           Genes #> 202 AMY1B;PRSS2;PRSS1;ATP1A2;PRSS3;CELA2A;CELA2B;CPA2;CPA1;CEL;CFTR;PNLIP;CELA3A;CELA3B;AMY2A;AMY2B;CPB1;PLA2G2D;PLA2G2A;CTRL;FXYD2;PNLIPRP2;PNLIPRP1;CTRB2;PLA2G10;CTRB1;PLA2G1B;ATP2A3;SLC4A4 #> 161                                                                                                      PDX1;BHLHA15;HNF1B;MAFA;NR5A2;IAPP;RFX6;FOXA2;ONECUT1;SLC2A2;INS;NKX2-2;NKX6-1;NEUROD1 #> 230                                                                 PRSS2;PRSS1;ATP1A2;PRSS3;CELA2A;CELA2B;CPA2;CPA1;SLC6A19;PGA4;MEP1A;CELA3A;CELA3B;CPB1;CTRL;FXYD2;SLC3A1;CTRB2;CTRB1;SLC8A2 #>     Rank        Database #> 202    1 KEGG_2021_Human #> 161    2 KEGG_2021_Human #> 230    3 KEGG_2021_Human head(res[res$Database == \"MSigDB_Hallmark_2020\", ], n = 3) #>                    Term Overlap      P.value Adjusted.P.value Odds.Ratio #> 501 Pancreas Beta Cells   19/40 5.821496e-14     1.921094e-12  15.642497 #> 49    KRAS Signaling Dn  20/200 8.805898e-03     1.452973e-01   1.894501 #> 451         Pperoxisome   7/104 3.681308e-01     9.999916e-01   1.213964 #>     Combined.Score #> 501     476.699372 #> 49        8.965409 #> 451       1.213135 #>                                                                                                                       Genes #> 501               CHGA;ABCC8;PDX1;GCG;G6PC2;SST;IAPP;INSM1;DCX;FOXA2;PCSK2;PCSK1;SLC2A2;INS;SCGN;NKX2-2;NKX6-1;PAK3;NEUROD1 #> 49  EGF;CNTFR;TENT5C;CLPS;TCL1A;IL12B;GP2;MYOT;SERPINA10;KCNQ2;ZBTB16;CAPN9;CPA2;CALCB;CPB1;SLC38A3;MYH7;NPHS1;ARHGDIG;NOS1 #> 451                                                                                 RXRG;CEL;CACNA1B;ABCC8;ALB;SERPINA6;TTR #>     Rank             Database #> 501    1 MSigDB_Hallmark_2020 #> 49     2 MSigDB_Hallmark_2020 #> 451    3 MSigDB_Hallmark_2020 res <- EnrichIt(userlist, list(KEGG = ParseGMT(kegg_gmt), Hallmark = ParseGMT(hallmark_gmt))) #> Warning in CheckUserList(userlist, db, use_matched_only = use_matched_only): #> User list contains 335 unmatched genes. Showing first 10: A1CF, A4GNT, AADAC, #> ADAMTS8, ADGRV1, AGR3, AJAP1, AKAIN1, ALKAL2, AMBP #> Warning in CheckUserList(userlist, db, use_matched_only = use_matched_only): #> User list contains 494 unmatched genes. Showing first 10: A1CF, A4GNT, AADAC, #> ACMSD, ACSM2B, ACSM6, ACTL6B, ADAMTS8, ADGRV1, ADH1A head(res[res$Database == \"KEGG\", ], n = 3) #>                                     Term Overlap      P.value Adjusted.P.value #> 202                 Pancreatic secretion  29/102 1.462598e-13     3.510235e-11 #> 161 Maturity onset diabetes of the young   14/26 1.403986e-11     1.684783e-09 #> 230     Protein digestion and absorption  20/103 9.254422e-07     7.403538e-05 #>     Odds.Ratio Combined.Score #> 202   6.950357      205.40663 #> 161  20.020000      500.28219 #> 230   4.147905       57.62682 #>                                                                                                                                                                                           Genes #> 202 AMY1B;PRSS2;PRSS1;ATP1A2;PRSS3;CELA2A;CELA2B;CPA2;CPA1;CEL;CFTR;PNLIP;CELA3A;CELA3B;AMY2A;AMY2B;CPB1;PLA2G2D;PLA2G2A;CTRL;FXYD2;PNLIPRP2;PNLIPRP1;CTRB2;PLA2G10;CTRB1;PLA2G1B;ATP2A3;SLC4A4 #> 161                                                                                                      PDX1;BHLHA15;HNF1B;MAFA;NR5A2;IAPP;RFX6;FOXA2;ONECUT1;SLC2A2;INS;NKX2-2;NKX6-1;NEUROD1 #> 230                                                                 PRSS2;PRSS1;ATP1A2;PRSS3;CELA2A;CELA2B;CPA2;CPA1;SLC6A19;PGA4;MEP1A;CELA3A;CELA3B;CPB1;CTRL;FXYD2;SLC3A1;CTRB2;CTRB1;SLC8A2 #>     Rank Database #> 202    1     KEGG #> 161    2     KEGG #> 230    3     KEGG head(res[res$Database == \"Hallmark\", ], n = 3) #>                    Term Overlap      P.value Adjusted.P.value Odds.Ratio #> 501 Pancreas Beta Cells   19/40 5.821496e-14     1.921094e-12  15.642497 #> 49    KRAS Signaling Dn  20/200 8.805898e-03     1.452973e-01   1.894501 #> 451         Pperoxisome   7/104 3.681308e-01     9.999916e-01   1.213964 #>     Combined.Score #> 501     476.699372 #> 49        8.965409 #> 451       1.213135 #>                                                                                                                       Genes #> 501               CHGA;ABCC8;PDX1;GCG;G6PC2;SST;IAPP;INSM1;DCX;FOXA2;PCSK2;PCSK1;SLC2A2;INS;SCGN;NKX2-2;NKX6-1;PAK3;NEUROD1 #> 49  EGF;CNTFR;TENT5C;CLPS;TCL1A;IL12B;GP2;MYOT;SERPINA10;KCNQ2;ZBTB16;CAPN9;CPA2;CALCB;CPB1;SLC38A3;MYH7;NPHS1;ARHGDIG;NOS1 #> 451                                                                                 RXRG;CEL;CACNA1B;ABCC8;ALB;SERPINA6;TTR #>     Rank Database #> 501    1 Hallmark #> 49     2 Hallmark #> 451    3 Hallmark"},{"path":"https://pwwang.github.io/enrichit/articles/over-representation_enrichment_analysis.html","id":"generate-clusterprofiler-style-result","dir":"Articles","previous_headings":"Enrichment analysis","what":"Generate clusterProfiler style result","title":"Over-representation Enrichment Analysis","text":"EnrichIt function can also generate results clusterProfiler style. , can set style argument \"clusterProfiler\".","code":"head(EnrichIt(userlist, kegg_gmt, style = \"clusterProfiler\"), n = 3) #> Warning in CheckUserList(userlist, db, use_matched_only = use_matched_only): #> User list contains 335 unmatched genes. Showing first 10: A1CF, A4GNT, AADAC, #> ADAMTS8, ADGRV1, AGR3, AJAP1, AKAIN1, ALKAL2, AMBP #>                      ID                             Description GeneRatio #> 202 KEGG_2021_Human_202                    Pancreatic secretion    29/279 #> 178 KEGG_2021_Human_178 Neuroactive ligand-receptor interaction    41/279 #> 161 KEGG_2021_Human_161    Maturity onset diabetes of the young    14/279 #>       BgRatio       pvalue     p.adjust       qvalue #> 202 102/10922 7.021146e-23 1.685075e-20 1.345104e-20 #> 178 341/10922 5.947771e-17 7.137325e-15 5.697338e-15 #> 161  26/10922 2.674313e-16 2.139450e-14 1.707807e-14 #>                                                                                                                                                                                                                                         geneID #> 202                                                AMY1B/PRSS2/PRSS1/ATP1A2/PRSS3/CELA2A/CELA2B/CPA2/CPA1/CEL/CFTR/PNLIP/CELA3A/CELA3B/AMY2A/AMY2B/CPB1/PLA2G2D/PLA2G2A/CTRL/FXYD2/PNLIPRP2/PNLIPRP1/CTRB2/PLA2G10/CTRB1/PLA2G1B/ATP2A3/SLC4A4 #> 178 SST/AGTR2/PRSS2/VIPR2/PRSS1/PRSS3/AVPR1B/CCKBR/GRPR/PPY/EDN3/GABRA4/GABRB1/GRIK3/GCGR/GHRL/GLRA1/GLRA3/UCN3/NPY/CHRNB3/CHRNB2/GCG/IAPP/GHSR/GRIA2/CALCB/GRIA4/OPRM1/SSTR1/HTR1A/SSTR3/SSTR5/KNG1/PRLHR/GABRG1/ADCYAP1/P2RX2/P2RX1/CRH/CNR1 #> 161                                                                                                                                                     PDX1/BHLHA15/HNF1B/MAFA/NR5A2/IAPP/RFX6/FOXA2/ONECUT1/SLC2A2/INS/NKX2-2/NKX6-1/NEUROD1 #>     Count        Database #> 202    29 KEGG_2021_Human #> 178    41 KEGG_2021_Human #> 161    14 KEGG_2021_Human"},{"path":"https://pwwang.github.io/enrichit/articles/over-representation_enrichment_analysis.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"Over-representation Enrichment Analysis","text":"result EnrichIt function can visualized using EnrichmentPlot function scplotter package. EnrichmentPlot function supports various plot types, including bar plots, dot plots, network plots, word clouds, etc.","code":"res <- EnrichIt(userlist, c(kegg_gmt, hallmark_gmt), style = \"clusterProfiler\") #> Warning in CheckUserList(userlist, db, use_matched_only = use_matched_only): #> User list contains 335 unmatched genes. Showing first 10: A1CF, A4GNT, AADAC, #> ADAMTS8, ADGRV1, AGR3, AJAP1, AKAIN1, ALKAL2, AMBP #> Warning in CheckUserList(userlist, db, use_matched_only = use_matched_only): #> User list contains 494 unmatched genes. Showing first 10: A1CF, A4GNT, AADAC, #> ACMSD, ACSM2B, ACSM6, ACTL6B, ADAMTS8, ADGRV1, ADH1A  EnrichmentPlot(res, split_by = \"Database\") EnrichmentPlot(res, plot_type = \"dot\", split_by = \"Database\") kegg_res <- res[res$Database == \"KEGG_2021_Human\", ] EnrichmentPlot(kegg_res, plot_type = \"network\") EnrichmentPlot(kegg_res, plot_type = \"wordcloud\")"},{"path":"https://pwwang.github.io/enrichit/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Panwen Wang. Author, maintainer.","code":""},{"path":"https://pwwang.github.io/enrichit/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Wang P (2025). enrichit: Gene Set -Representation Enrichment Analysis. R package version 0.0.1.","code":"@Manual{,   title = {enrichit: Gene Set Over-Representation Enrichment Analysis},   author = {Panwen Wang},   year = {2025},   note = {R package version 0.0.1}, }"},{"path":"https://pwwang.github.io/enrichit/index.html","id":"enrichit","dir":"","previous_headings":"","what":"Gene Set Over-Representation Enrichment Analysis","title":"Gene Set Over-Representation Enrichment Analysis","text":"R package enrichment (-representation) analysis gene sets. reproduces results clusterProfiler enrichr, following features: Offline (internet connection required) Analysis custom gene sets (GMT files) styles (clusterProfiler enrichr) supported Seemless integration scplotter visualization","code":""},{"path":"https://pwwang.github.io/enrichit/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Gene Set Over-Representation Enrichment Analysis","text":"can install development version enrichit GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"pwwang/enrichit\") # or remotes::install_github(\"pwwang/enrichit\")"},{"path":"https://pwwang.github.io/enrichit/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Gene Set Over-Representation Enrichment Analysis","text":"","code":"library(enrichit)  data(userlist) kegg_gmt <- system.file(\"extdata\", \"KEGG_2021_Human.gmt.gz\", package = \"enrichit\") hallmark_gmt <- system.file(\"extdata\", \"MSigDB_Hallmark_2020.gmt.gz\", package = \"enrichit\")  EnrichIt(userlist, c(kegg_gmt, hallmark_gmt)) #                                        Term Overlap      P.value # 202                    Pancreatic secretion  29/102 1.462598e-13 # 161    Maturity onset diabetes of the young   14/26 1.403986e-11 # 230        Protein digestion and absorption  20/103 9.254422e-07 # 178 Neuroactive ligand-receptor interaction  41/341 3.071673e-06 # 45    Carbohydrate digestion and absorption   11/47 4.410201e-05 # 87             Fat digestion and absorption   10/43 1.037564e-04 # 501                     Pancreas Beta Cells   19/40 5.821496e-14 # 49                        KRAS Signaling Dn  20/200 8.805898e-03 # 451                             Pperoxisome   7/104 3.681308e-01 # 441                    Bile Acid Metabolism   7/112 4.427207e-01 # 22                       Hedgehog Signaling    2/36 6.087590e-01 # 401                            Angiogenesis    2/36 6.087590e-01 # ... ... #     Adjusted.P.value Odds.Ratio Combined.Score # 202     3.510235e-11  6.9503571    205.4066273 # 161     1.684783e-09 20.0200000    500.2821950 # 230     7.403538e-05  4.1479048     57.6268164 # 178     1.843004e-04  2.3870157     30.2990782 # 45      2.116896e-03  5.2050857     52.2018318 # 87      4.150256e-03  5.1550271     47.2894589 # 501     1.921094e-12 15.6424970    476.6993715 # 49      1.452973e-01  1.8945006      8.9654086 # 451     9.999916e-01  1.2139642      1.2131352 # 441     9.999916e-01  1.1205931      0.9130774 # 22      9.999916e-01  0.9875048      0.4901311 # 401     9.999916e-01  0.9875048      0.4901311 # ... ... #                                         Genes Rank             Database # 202                    AMY1B;PRSS2;SLC4A4;...    1      KEGG_2021_Human # 161                  PDX1;BHLHA15;NEUROD1;...    2      KEGG_2021_Human # 230                    PRSS2;PRSS1;SLC8A2;...    3      KEGG_2021_Human # 178                        SST;AGTR2;CNR1;...    4      KEGG_2021_Human # 45                         AMY1B;G6PC1;SI;...    5      KEGG_2021_Human # 87                PLA2G2D;PLA2G2A;PLA2G4A;...    6      KEGG_2021_Human # 501                    CHGA;ABCC8;NEUROD1;...    1 MSigDB_Hallmark_2020 # 49                         EGF;CNTFR;NOS1;...    2 MSigDB_Hallmark_2020 # 451   RXRG;CEL;CACNA1B;ABCC8;ALB;SERPINA6;TTR    3 MSigDB_Hallmark_2020 # 441     RXRG;NR0B2;SERPINA6;NR1H4;GNMT;TTR;GC    4 MSigDB_Hallmark_2020 # 22                               CNTFR;NKX6-1    5 MSigDB_Hallmark_2020 # 401                                  VTN;APOH    5 MSigDB_Hallmark_2020 # ... ...  EnrichIt(userlist, c(kegg_gmt, hallmark_gmt), style = \"clusterProfiler\") #                          ID                             Description GeneRatio # 202     KEGG_2021_Human_202                    Pancreatic secretion    29/279 # 178     KEGG_2021_Human_178 Neuroactive ligand-receptor interaction    41/279 # 161     KEGG_2021_Human_161    Maturity onset diabetes of the young    14/279 # 230     KEGG_2021_Human_230        Protein digestion and absorption    20/279 # 45       KEGG_2021_Human_45   Carbohydrate digestion and absorption    11/279 # 87       KEGG_2021_Human_87            Fat digestion and absorption    10/279 # 501 MSigDB_Hallmark_2020_50                     Pancreas Beta Cells    19/120 # 49  MSigDB_Hallmark_2020_49                       KRAS Signaling Dn    20/120 # 321 MSigDB_Hallmark_2020_32                   Xenobiotic Metabolism    10/120 # 451 MSigDB_Hallmark_2020_45                             Pperoxisome     7/120 # 441 MSigDB_Hallmark_2020_44                    Bile Acid Metabolism     7/120 # 231 MSigDB_Hallmark_2020_23                              Complement     9/120 #       BgRatio       pvalue     p.adjust       qvalue                  geneID # 202 102/10922 7.021146e-23 1.685075e-20 1.345104e-20   AMY1B/PRSS2/PRSS1/... # 178 341/10922 5.947771e-17 7.137325e-15 5.697338e-15     SST/AGTR2/PRSS2/... # 161  26/10922 2.674313e-16 2.139450e-14 1.707807e-14  PDX1/BHLHA15/HNF1B/... # 230 103/10922 1.091957e-12 6.551741e-11 5.229898e-11  PRSS2/PRSS1/ATP1A2/... # 45   47/10922 1.910985e-08 9.172727e-07 7.322089e-07   AMY1B/G6PC1/G6PC2/... # 87   43/10922 9.170990e-08 3.668396e-06 2.928281e-06 PLA2G2D/PLA2G2A/CEL/... # 501  40/10922 1.471191e-27 4.854929e-26 3.097243e-26     CHGA/ABCC8/PDX1/... # 49  200/10922 4.117838e-14 6.794432e-13 4.334566e-13    EGF/CNTFR/TENT5C/... # 321 200/10922 6.837635e-05 7.521398e-04 4.798340e-04     RBP4/ITIH4/PDK4/... # 451 104/10922 1.428239e-04 1.178297e-03 7.517049e-04    RXRG/CEL/CACNA1B/... # 441 112/10922 2.265978e-04 1.495545e-03 9.540959e-04 RXRG/NR0B2/SERPINA6/... # 231 200/10922 3.505544e-04 1.928049e-03 1.230015e-03    PRSS3/KLKB1/KLK1/... #     Count             Database # 202    29      KEGG_2021_Human # 178    41      KEGG_2021_Human # 161    14      KEGG_2021_Human # 230    20      KEGG_2021_Human # 45     11      KEGG_2021_Human # 87     10      KEGG_2021_Human # 501    19 MSigDB_Hallmark_2020 # 49     20 MSigDB_Hallmark_2020 # 321    10 MSigDB_Hallmark_2020 # 451     7 MSigDB_Hallmark_2020 # 441     7 MSigDB_Hallmark_2020 # 231     9 MSigDB_Hallmark_2020"},{"path":"https://pwwang.github.io/enrichit/index.html","id":"visualization","dir":"","previous_headings":"","what":"Visualization","title":"Gene Set Over-Representation Enrichment Analysis","text":"","code":"library(scplotter) library(enrichit)  data(userlist) kegg_gmt <- system.file(\"extdata\", \"KEGG_2021_Human.gmt.gz\", package = \"enrichit\") hallmark_gmt <- system.file(\"extdata\", \"MSigDB_Hallmark_2020.gmt.gz\", package = \"enrichit\")  enrich_result <- EnrichIt(userlist, c(kegg_gmt, hallmark_gmt), style = \"clusterProfiler\")  EnrichmentPlot(enrich_result, split_by = \"Database\") EnrichmentPlot(enrich_result, plot_type = \"dot\", split_by = \"Database\") EnrichmentPlot(enrich_result[enrich_result$Database == \"KEGG_2021_Human\", ], plot_type = \"network\") EnrichmentPlot(enrich_result, plot_type = \"wordcloud\")"},{"path":"https://pwwang.github.io/enrichit/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Gene Set Over-Representation Enrichment Analysis","text":"See documentation details.","code":""},{"path":"https://pwwang.github.io/enrichit/reference/BuildNumbers.html","id":null,"dir":"Reference","previous_headings":"","what":"Build the numbers for the tests — BuildNumbers","title":"Build the numbers for the tests — BuildNumbers","text":"Build numbers tests","code":""},{"path":"https://pwwang.github.io/enrichit/reference/BuildNumbers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build the numbers for the tests — BuildNumbers","text":"","code":"BuildNumbers(userlist, geneset, background)"},{"path":"https://pwwang.github.io/enrichit/reference/BuildNumbers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build the numbers for the tests — BuildNumbers","text":"userlist Vector user-provided genes geneset Vector genes gene set background Vector genes universe number genes universe","code":""},{"path":"https://pwwang.github.io/enrichit/reference/BuildNumbers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build the numbers for the tests — BuildNumbers","text":"list following elements: k: Number genes user list also gene set M: Number genes gene set n: Number genes user list N: Total number genes universe","code":""},{"path":"https://pwwang.github.io/enrichit/reference/CheckUserList.html","id":null,"dir":"Reference","previous_headings":"","what":"Check user list against gene sets — CheckUserList","title":"Check user list against gene sets — CheckUserList","text":"Check user list gene sets","code":""},{"path":"https://pwwang.github.io/enrichit/reference/CheckUserList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check user list against gene sets — CheckUserList","text":"","code":"CheckUserList(userlist, genesets, use_matched_only, show_all_unmatched = FALSE)"},{"path":"https://pwwang.github.io/enrichit/reference/CheckUserList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check user list against gene sets — CheckUserList","text":"userlist Vector user-provided genes genesets List gene sets use_matched_only Logical, whether return matched genes Otherwise genes user list used. affect number genes user list computing p-value. show_all_unmatched Logical, whether show unmatched genes. instead show first 10 unmatched genes.","code":""},{"path":"https://pwwang.github.io/enrichit/reference/CheckUserList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check user list against gene sets — CheckUserList","text":"vector user-provided genes also gene sets","code":""},{"path":"https://pwwang.github.io/enrichit/reference/ComputePValue.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute statistic p-value by given numbers — ComputePValue","title":"Compute statistic p-value by given numbers — ComputePValue","text":"Compute statistic p-value given numbers","code":""},{"path":"https://pwwang.github.io/enrichit/reference/ComputePValue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute statistic p-value by given numbers — ComputePValue","text":"","code":"ComputePValue(k, M, n, N, method = c(\"fisher\", \"hypergeometric\"))"},{"path":"https://pwwang.github.io/enrichit/reference/ComputePValue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute statistic p-value by given numbers — ComputePValue","text":"k Number genes user list gene set M Number genes gene set n Number genes user list N Total number genes universe method Method computing p-value, either \"fisher\" \"hypergeometric\"","code":""},{"path":"https://pwwang.github.io/enrichit/reference/ComputePValue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute statistic p-value by given numbers — ComputePValue","text":"p-value specified test","code":""},{"path":"https://pwwang.github.io/enrichit/reference/EnrichIt.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform enrichment analysis — EnrichIt","title":"Perform enrichment analysis — EnrichIt","text":"Perform enrichment analysis","code":""},{"path":"https://pwwang.github.io/enrichit/reference/EnrichIt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform enrichment analysis — EnrichIt","text":"","code":"EnrichIt(   userlist,   dbs,   method = ifelse(tolower(style[1]) == \"enrichr\", \"fisher\", \"hypergeometric\"),   use_matched_only = ifelse(tolower(style[1]) == \"enrichr\", FALSE, TRUE),   padjust_method = c(\"BH\", \"bonferroni\", \"holm\", \"hochberg\", \"hommel\", \"BY\", \"fdr\"),   background = NULL,   style = c(\"enrichr\", \"Enrichr\", \"clusterProfiler\", \"ClusterProfiler\",     \"clusterprofiler\"),   return_all = FALSE )"},{"path":"https://pwwang.github.io/enrichit/reference/EnrichIt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform enrichment analysis — EnrichIt","text":"userlist Vector user-provided genes dbs List gene sets paths GMT files can vector database names. can set names vector, used database names. Otherwise list expected, element database (e.g. parsed gmt file). database given directly (without name), expression argument used database name. method Method computing p-value, either \"fisher\" \"hypergeometric\" style \"enrichr\", method defaults \"fisher\". style \"clusterProfiler\", method defaults \"hypergeometric\". use_matched_only Logical, whether use matched genes gene sets. affect number genes user list computing p-value. default, style \"enrichr\", set FALSE. style \"clusterProfiler\", set TRUE. padjust_method Method adjusting p-values, either \"BH\", \"bonferroni\", \"holm\", \"hochberg\", \"hommel\", \"\", \"fdr\" background Vector genes universe number genes universe. NULL, number genes gene set used. \"enrichr\", default 20,000. \"clusterProfiler\", default number unique genes gene set. Note \"enrichr\", vector given, length used, checking done see userlist genes dbs vector. style Style output, either \"enrichr\" \"clusterProfiler\" return_all Logical, whether return results (gene sets dbs) least one gene user list.","code":""},{"path":"https://pwwang.github.io/enrichit/reference/EnrichIt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform enrichment analysis — EnrichIt","text":"data frame results. style \"enrichr\", columns : Database: Name database Term: Name term Overlap: Number genes user list gene set P.value: p-value enrichment test Adjusted.P.value: Adjusted p-value enrichment test Odds.Ratio: Odds ratio enrichment test Combined.Score: Combined score enrichment test Genes: Genes user list also gene set Rank: Rank term based combined score style \"clusterProfiler\", columns : ID: Name term Description: Description term GeneRatio: Ratio genes user list gene set BgRatio: Ratio genes gene set universe Count: Number genes user list also gene set pvalue: p-value enrichment test p.adjust: Adjusted p-value enrichment test qvalue: Q-value enrichment test geneID: Genes user list also gene set Database: Name database","code":""},{"path":"https://pwwang.github.io/enrichit/reference/FetchGMT.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch GMT file — FetchGMT","title":"Fetch GMT file — FetchGMT","text":"Fetch GMT file","code":""},{"path":"https://pwwang.github.io/enrichit/reference/FetchGMT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch GMT file — FetchGMT","text":"","code":"FetchGMT(gmtpath)"},{"path":"https://pwwang.github.io/enrichit/reference/FetchGMT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch GMT file — FetchGMT","text":"gmtpath Path GMT file Either local file path URL. URL provided, file downloaded cached. local file path provided, checked existence. can also name library Enrichr database. See https://maayanlab.cloud/Enrichr/#libraries.","code":""},{"path":"https://pwwang.github.io/enrichit/reference/FetchGMT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch GMT file — FetchGMT","text":"gmtpath local file, returns path. gmtpath URL, downloads file temporary cache directory already present returns path cached file.","code":""},{"path":"https://pwwang.github.io/enrichit/reference/FetchGMT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch GMT file — FetchGMT","text":"","code":"# \\donttest{ if (FALSE) { # Fetch a GMT file from a URL (will be cached) gmtpath_url <- paste0(   \"https://maayanlab.cloud/Enrichr/geneSetLibrary?mode=text&libraryName=\",   \"Data_Acquisition_Method_Most_Popular_Genes\" ) FetchGMT(gmtpath_url) # Example output: ~/.cache/enrichit/xxxxxx.gmt  FetchGMT(\"Data_Acquisition_Method_Most_Popular_Genes\") # Example output: ~/.cache/enrichit/xxxxxx.gmt  # Fetching the same URL again uses the cache gmt_file_url_cached <- FetchGMT(gmtpath_url) # Should be the same path as gmt_file_url print(identical(gmt_file_url, gmt_file_url_cached)) # TRUE  # If the GMT file is local # Create a dummy local file for example local_gmt_path <- tempfile(fileext = \".gmt\") writeLines(c(\"GENESET1\\tdesc1\\tGENE1\\tGENE2\", \"GENESET2\\tdesc2\\tGENE3\\tGENE4\"), local_gmt_path) FetchGMT(local_gmt_path) # Example output: /tmp/RtmpXXXXXX/filexxxx.gmt (original path) } # }"},{"path":"https://pwwang.github.io/enrichit/reference/ParseGMT.html","id":null,"dir":"Reference","previous_headings":"","what":"Read GMT file — ParseGMT","title":"Read GMT file — ParseGMT","text":"Read GMT file","code":""},{"path":"https://pwwang.github.io/enrichit/reference/ParseGMT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read GMT file — ParseGMT","text":"","code":"ParseGMT(gmtfile, swap_name_desc_if_needed = TRUE)"},{"path":"https://pwwang.github.io/enrichit/reference/ParseGMT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read GMT file — ParseGMT","text":"gmtfile Path GMT file swap_name_desc_if_needed Logical, whether swap name description fields descriptions shorter names.","code":""},{"path":"https://pwwang.github.io/enrichit/reference/ParseGMT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read GMT file — ParseGMT","text":"list gene sets, names list gene set names, element vector gene names.","code":""},{"path":"https://pwwang.github.io/enrichit/reference/ParseGMT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read GMT file — ParseGMT","text":"","code":"# \\donttest{ if (FALSE) { # Example GMT file content gmtfile <- system.file(\"extdata\", \"KEGG_2021_Human.gmt\", package = \"enrichit\") # Read the GMT file ParseGMT(gmtfile) } # }"},{"path":"https://pwwang.github.io/enrichit/reference/userlist.html","id":null,"dir":"Reference","previous_headings":"","what":"An example of gene list — userlist","title":"An example of gene list — userlist","text":"example gene list","code":""},{"path":"https://pwwang.github.io/enrichit/reference/userlist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"An example of gene list — userlist","text":"","code":"# \\dontrun{ if (interactive()) {  userlist <- c(    \"A1CF\", \"A4GNT\", \"AADAC\", \"ABCC8\", \"ACADL\", \"ACKR1\", \"ACMSD\", \"ACSL6\", \"ACSM2B\", \"ACSM3\",    \"ACSM6\", \"ACTL6B\", \"ADAMTS8\", \"ADCYAP1\", \"ADGRV1\", \"ADH1A\", \"ADH1B\", \"ADIPOQ\", \"AGR3\",    \"AGTR2\", \"AJAP1\", \"AKAIN1\", \"AKR7A3\", \"AKR7L\", \"ALB\", \"ALDOB\", \"ALKAL2\", \"AMBP\", \"AMHR2\",    \"AMPD1\", \"AMY1B\", \"AMY2A\", \"AMY2B\", \"ANKRD20A1\", \"ANKRD34C\", \"ANKRD40CL\", \"ANKRD62\", \"ANKS4B\",    \"ANO5\", \"ANPEP\", \"APOBEC2\", \"APOH\", \"AQP12A\", \"AQP12B\", \"AQP8\", \"ARHGDIG\", \"ARSL\", \"ART3\",    \"ART4\", \"ARX\", \"ASB16\", \"ASCL5\", \"ASTN1\", \"ATP1A2\", \"ATP2A3\", \"ATRNL1\", \"AVPR1B\", \"B3GAT1\",    \"B3GNT6\", \"BANF2\", \"BEGAIN\", \"BEX1\", \"BHLHA15\", \"BLK\", \"BMP5\", \"BNIP5\", \"BRSK2\", \"BTBD17\",    \"BTNL3\", \"BTNL8\", \"BTNL9\", \"C10orf62\", \"C10orf71\", \"C12orf42\", \"C14orf180\", \"C16orf89\",    \"C1orf127\", \"C1QL1\", \"C22orf42\", \"C2CD4B\", \"C2orf72\", \"C4BPA\", \"C6\", \"C7\", \"CA4\", \"CABP7\",    \"CACNA1B\", \"CACNA2D2\", \"CALCB\", \"CALN1\", \"CAPN6\", \"CAPN9\", \"CARTPT\", \"CASR\", \"CBFA2T3\",    \"CBLIF\", \"CCDC141\", \"CCDC196\", \"CCDC92B\", \"CCKBR\",    \"CCL14\", \"CCL15\", \"CCL19\", \"CCL21\", \"CCR7\", \"CD160\", \"CD27\", \"CD300LG\", \"CD8A\", \"CDH17\",    \"CDH18\", \"CDH22\", \"CDHR5\", \"CDX2\", \"CEL\", \"CELA2A\", \"CELA2B\", \"CELA3A\", \"CELA3B\", \"CELF3\",    \"CFAP97D2\", \"CFC1\", \"CFTR\", \"CHAD\", \"CHGA\", \"CHGB\", \"CHRDL1\", \"CHRNB2\", \"CHRNB3\", \"CHST5\",    \"CHST8\", \"CHST9\", \"CIDEC\", \"CLCNKA\", \"CLDN18\", \"CLDN3\", \"CLEC17A\", \"CLEC9A\", \"CLPS\", \"CLRN3\",    \"CLU\", \"CMA1\", \"CNMD\", \"CNR1\", \"CNTFR\", \"CNTN2\", \"COLEC11\", \"CPA1\", \"CPA2\", \"CPB1\",    \"CPLX2\", \"CR2\", \"CRH\", \"CRP\", \"CRYBA2\", \"CTNND2\", \"CTRB1\", \"CTRB2\", \"CTRC\", \"CTRL\",    \"CTXND1\", \"CUX2\", \"CUZD1\", \"CXCL13\", \"DACH2\", \"DCDC2\", \"DCX\", \"DDC\", \"DLK1\", \"DMRTC1B\",    \"DNASE1L3\", \"DNASE2B\", \"DPEP1\", \"DPP10\", \"DPYS\", \"DPYSL5\", \"DUSP26\", \"ECE2\", \"EDN3\", \"EGF\",    \"ELAPOR1\", \"ENAM\", \"ENHO\", \"ENTPD8\", \"EPB41L4B\", \"EPCIP\", \"EPHA8\", \"EPO\", \"ERBB4\", \"ERICH5\",    \"ERP27\", \"F11\", \"F5\", \"FABP4\", \"FAM107A\", \"FAM177B\", \"FAM180B\", \"FAM240C\", \"FAM3B\", \"FBP2\",    \"FBXW12\", \"FCRL3\", \"FFAR1\", \"FGFR4\", \"FGL1\", \"FLT3\", \"FMO5\", \"FOXA2\", \"FOXI1\", \"FRMPD1\",    \"FSTL5\", \"FUT9\", \"FXYD2\", \"FYB2\", \"G6PC1\", \"G6PC2\", \"GABRA4\", \"GABRB1\", \"GABRG1\", \"GAD2\",    \"GALNT16\", \"GATM\", \"GBA3\", \"GC\", \"GCG\", \"GCGR\", \"GCNT3\", \"GFAP\", \"GHRL\", \"GHSR\",    \"GJC3\", \"GJD2\", \"GLRA1\", \"GLRA3\", \"GLS2\", \"GMNC\", \"GNAT3\", \"GNMT\", \"GP2\", \"GPA33\",    \"GPBAR1\", \"GPD1\", \"GPHA2\", \"GPM6A\", \"GPR119\", \"GPR142\", \"GPR148\", \"GPT2\", \"GRB14\", \"GRIA2\",    \"GRIA4\", \"GRIK3\", \"GRPR\", \"GSTA2\", \"GSTM1\", \"GUCA1C\", \"GUCA2A\", \"GUCY2C\", \"GZMK\", \"HABP2\",    \"HEPACAM2\", \"HHATL\", \"HLF\", \"HMGCLL1\", \"HMX3\", \"HNF1B\", \"HOGA1\", \"HOXB13\", \"HPD\", \"HTR1A\",    \"IAPP\", \"IGFALS\", \"IGFN1\", \"IGLL5\", \"IGSF1\", \"IHH\", \"IL12B\", \"IL22RA1\", \"INS\", \"INS-IGF2\",    \"INSC\", \"INSM1\", \"IRX2\", \"ITGAD\", \"ITIH4\", \"ITLN1\", \"ITPRID1\", \"JCHAIN\", \"JSRP1\", \"KASH5\",    \"KCNA2\", \"KCNA5\", \"KCNC1\", \"KCNG3\", \"KCNH6\", \"KCNH7\", \"KCNIP1\", \"KCNJ11\", \"KCNJ16\", \"KCNJ3\",    \"KCNK10\", \"KCNK16\", \"KCNK3\", \"KCNMB2\", \"KCNQ2\", \"KCNT1\", \"KCTD8\", \"KIF12\", \"KIF19\", \"KIF1A\",    \"KIRREL2\", \"KLB\", \"KLF15\", \"KLHL1\", \"KLHL32\", \"KLK1\", \"KLKB1\", \"KLRB1\", \"KNG1\", \"KRT20\",    \"KRT222\", \"LCN10\", \"LCN6\", \"LEFTY1\", \"LGALS2\", \"LHFPL4\", \"LILRA4\", \"LMO3\", \"LRRC19\", \"LRRC66\",    \"LRRC7\", \"LRRTM3\", \"LRRTM4\", \"LTF\", \"LTK\", \"LY9\", \"MAFA\", \"MAP3K15\", \"MBOAT4\", \"MEP1A\",    \"MFSD6L\", \"MGAM2\", \"MLXIPL\", \"MOGAT3\", \"MRLN\", \"MS4A1\", \"MT1G\", \"MT1H\", \"MTMR7\", \"MTUS2\",    \"MUC13\", \"MUC17\", \"MUC5AC\", \"MUC6\", \"MUSK\", \"MYH7\", \"MYLK2\", \"MYMX\", \"MYO1A\", \"MYO7B\",    \"MYOT\", \"MYPN\", \"MYRFL\", \"MYRIP\", \"MYT1\", \"MYT1L\", \"MZB1\", \"NAT16\", \"NAT8L\", \"NEURL1\",    \"NEURL3\", \"NEUROD1\", \"NHERF4\", \"NKX2-2\", \"NKX6-1\", \"NKX6-2\", \"NKX6-3\", \"NLRP2\", \"NLRP9\",    \"NOL4\", \"NOS1\", \"NPAP1\", \"NPHS1\", \"NPY\", \"NR0B1\", \"NR0B2\", \"NR1H4\", \"NR5A2\", \"NRAP\", \"NRG4\",    \"NRSN1\", \"NRXN1\", \"NT5C1A\", \"NTRK2\", \"NXPE1\", \"OGDHL\", \"OLFM1\", \"OMG\", \"ONECUT1\", \"OPRM1\",    \"OR10G4\", \"OR10G8\", \"OR10G9\", \"OR2T11\", \"OR4D5\", \"OR52N1\", \"OR8D4\", \"ORM2\", \"OTC\", \"P2RX1\",    \"P2RX2\", \"PAH\", \"PAK3\", \"PAK5\", \"PAX5\", \"PCDHA1\", \"PCP4\", \"PCSK1\", \"PCSK1N\", \"PCSK2\",    \"PDIA2\", \"PDK4\", \"PDX1\", \"PDZK1\", \"PEX5L\", \"PGA4\", \"PGC\", \"PHGR1\", \"PHYHIPL\", \"PIGR\",    \"PIP5K1B\", \"PIRT\", \"PLA2G10\", \"PLA2G1B\", \"PLA2G2A\", \"PLA2G2D\", \"PLIN5\", \"PLPPR1\", \"PM20D1\",    \"PNLIP\", \"PNLIPRP1\", \"PNLIPRP2\", \"POTEC\", \"POU6F2\", \"PPARGC1A\", \"PPP1R1A\", \"PPP1R1B\", \"PPY\",    \"PRLHR\", \"PRODH2\", \"PROX1\", \"PRPH\", \"PRRT1B\", \"PRSS1\", \"PRSS2\", \"PRSS3\", \"PTF1A\", \"PTPN5\",    \"PTPRN2\", \"PVRIG\", \"RAB3C\", \"RALYL\", \"RBP2\", \"RBP4\", \"RBPJL\", \"REG1A\", \"REG1B\", \"REG3A\",    \"REG3G\", \"REG4\", \"RELN\", \"RERGL\", \"RFX6\", \"RIC3\", \"RIMBP2\", \"RIMS1\", \"RNF186\", \"RPL3L\",    \"RXRG\", \"SBK2\", \"SCARA5\", \"SCG3\", \"SCGN\", \"SCML4\", \"SCRT1\", \"SERPINA10\", \"SERPINA6\",    \"SERPINI2\", \"SEZ6\", \"SEZ6L\", \"SFRP5\", \"SGCZ\", \"SGSM1\", \"SH2D6\", \"SH2D7\", \"SH3GL2\", \"SHISAL2B\",    \"SI\", \"SIM1\", \"SLC12A1\", \"SLC16A12\", \"SLC17A4\", \"SLC17A6\", \"SLC1A2\", \"SLC22A31\", \"SLC25A18\",    \"SLC26A5\", \"SLC28A2\", \"SLC2A2\", \"SLC30A2\", \"SLC30A8\", \"SLC38A11\", \"SLC38A3\", \"SLC39A5\",    \"SLC3A1\", \"SLC4A10\", \"SLC4A4\", \"SLC5A8\", \"SLC5A9\", \"SLC6A17\", \"SLC6A19\", \"SLC6A4\", \"SLC7A14\",    \"SLC7A2\", \"SLC8A2\", \"SLITRK1\", \"SLITRK5\", \"SMIM31\", \"SMIM32\", \"SMLR1\", \"SNTG2\", \"SORCS1\",    \"SOWAHA\", \"SPAG6\", \"SPATA21\", \"SPIB\", \"SPINK1\", \"SPINK4\", \"SPTB\", \"SPX\", \"SST\", \"SSTR1\",    \"SSTR3\", \"SSTR5\", \"ST8SIA3\", \"STAB2\", \"STMND1\", \"SULT1C2\", \"SV2B\", \"SVOP\", \"SYBU\", \"SYCN\",    \"SYNPR\", \"SYT4\", \"SYT6\", \"TAGLN3\", \"TCEAL2\", \"TCERG1L\", \"TCL1A\", \"TDRD1\", \"TENT5C\", \"TEX11\",    \"THBS4\", \"THRSP\", \"TM4SF20\", \"TM4SF5\", \"TMC2\", \"TMED6\", \"TMEFF2\", \"TMEM132C\", \"TMEM132D\",    \"TMEM179\", \"TMEM196\", \"TMEM238L\", \"TMEM52\", \"TMEM63C\", \"TMEM72\", \"TNFRSF17\", \"TNR\", \"TNXB\",    \"TPO\", \"TPSD1\", \"TRARG1\", \"TRIM50\", \"TRIM63\", \"TRPM3\", \"TRPM5\", \"TRPV6\", \"TSPAN8\", \"TSPEAR\",    \"TTLL6\", \"TTN\", \"TTR\", \"TUBB4A\", \"TUNAR\", \"UBD\", \"UCN3\", \"UMOD\", \"UNC5CL\", \"UNC5D\",    \"UNC79\", \"UNC80\", \"VIL1\", \"VIPR2\", \"VSTM2A\", \"VTN\", \"VWA5B2\", \"WNK2\", \"XCR1\", \"XKR4\",    \"ZBTB16\", \"ZDHHC22\", \"ZG16\", \"ZNF831\"  ) } # }"}]
